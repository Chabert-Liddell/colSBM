library(colSBM)
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
?gh_token_help
browse_github_token()
gh::gh_whoami()
use_github_pages()
usethis::use_github_pages()
usethis::use_github_action("pkgdown")
library(colSBM)
use_package("bettermc")
library(usethis)
use_package("bettermc")
use_package("ggplot2")
use_package("purrr")
use_package("dplyr")
library(colSBM)
library(colSBM)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
plot(res_fw_iid)
plot(res_fw_iid$best_fit)
library(colSBM)
plot(res_fw_iid$best_fit)
plot(res_fw_iid$best_fit, ord = c(3,4,5,2,1))
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
library(colSBM)
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
use_package("patchwork")
library(colSBM)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
res_fw_iid$best_fit$A
res_fw_iid$best_fit$A[[1]]
library(colSBM)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
plot(res_fw_iid$best_fit, type = "graphon", ord = c(3,4,5,2,1))
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "block")
plot(res_fw_iid$best_fit, type = "meso")
plot(res_fw_iid$best_fit, type = "meso", mixture = TRUE)
?pivot_longer
?pivot_longer()
??pivot_longer()
use_package("tidyr")
self$A[[net_id]][order(self$Z[[net_id]]),
order(self$Z[[net_id]])] %>% t() %>%
reshape2::melt() %>%
ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(self$Z[[net_id]])[1:(self$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(self$Z[[net_id]])[1:(self$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(self$net_id[net_id]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "") +
ggplot2::scale_y_reverse() +
# scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
#                  guide = guide_axis(angle = 0) ) +
ggplot2::coord_equal(expand = FALSE) +
ggplot2::theme_bw(base_size = 15) +
ggplot2::theme(axis.ticks =  ggplot2::element_blank())
fit <- res_fw_iid$best_fit
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt()
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5)
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[net_id]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(self$net_id[net_id])
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(self$net_id[net_id])
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1])
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_reverse()
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = guide_axis(angle = 0) )
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = guide_axis(angle = 0) )
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = ggplot2::guide_axis(angle = 0) )
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = ggplot2::guide_axis(angle = 0) )  +
ggplot2::coord_equal(expand = FALSE) +
ggplot2::theme_bw(base_size = 15) +
ggplot2::theme(axis.ticks =  ggplot2::element_blank()
)
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>% t() %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = ggplot2::guide_axis(angle = 0) )  +
ggplot2::coord_equal(expand = FALSE) +
ggplot2::theme_bw(base_size = 15) +
ggplot2::theme(axis.ticks =  ggplot2::element_blank())
fit$A[[1]][order(fit$Z[[1]]),
order(fit$Z[[1]])] %>%
reshape2::melt() %>%       ggplot2::ggplot(ggplot2::aes(x = Var2, y = Var1, fill = value)) +
ggplot2::geom_tile(show.legend = FALSE) +
ggplot2::geom_hline(yintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::geom_vline(xintercept = cumsum(tabulate(fit$Z[[1]])[1:(fit$Q-1)])+.5,
col = "red", size = .5) +
ggplot2::scale_fill_gradient(low = "white", high = "black") +
ggplot2::ylab("") + ggplot2::xlab(fit$net_id[1]) +
ggplot2::scale_x_discrete(#limits = rev,
breaks = "")+
ggplot2::scale_y_discrete(limits = rev, breaks = "",#label = rev(custom_lab3),
guide = ggplot2::guide_axis(angle = 0) )  +
ggplot2::coord_equal(expand = FALSE) +
ggplot2::theme_bw(base_size = 15) +
ggplot2::theme(axis.ticks =  ggplot2::element_blank())
library(colSBM)
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(colSBM)
data("foodwebs")
# Chunk 3
global_opts = list(nb_cores = 1L,
nb_models = 5L,
nb_init = 10L,
depth = 2L,
verbosity = 2, spectral_init = FALSE,
Q_max = 8L, plot_details = 1)
set.seed(1234)
res_fw_iid <- estimate_colSBM(netlist = foodwebs[1:3],
colsbm_model = "iid",
directed = TRUE,
net_id = names(foodwebs)[1:3],
nb_run = 3L,
global_opts = global_opts)
# Chunk 4
res_fw_iid$ICL_clustering
